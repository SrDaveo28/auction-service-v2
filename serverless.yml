# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: srdaveolab
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: auction-servide-lab
# "service" is the name of this project. This will also be added to your AWS resource names.
service: auction-service-v2

stages:
  default:
    params:
      tableName: "users-table-${sls:stage}"

provider:
  name: aws
  runtime: nodejs20.x
  memorySize: 256
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
            - Fn::GetAtt: [AuctionsTable, Arn]
            - !Sub '${AuctionsTable.Arn}/index/statusAndEndDate'

  environment:
    USERS_TABLE: ${param:tableName}
    AUCTIONS_TABLE: AuctionsTable

plugins:
  - serverless-pseudo-parameters

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: "*"
  
  createAuction:    
    handler: src/handlers/createAuction.handler    
    events:      
      - http:          
          method: POST          
          path: /auction
          authorizer: ${self:custom.authorizer}

  getAuctions:    
    handler: src/handlers/getAuctions.handler    
    events:      
      - http:          
          method: GET       
          path: /auctions
          authorizer: ${self:custom.authorizer}

  getAuction:    
    handler: src/handlers/getAuction.handler    
    events:      
      - http:          
          method: GET       
          path: /auction/{id}
          authorizer: ${self:custom.authorizer}
        
  placeBid:    
    handler: src/handlers/placeBid.handler    
    events:      
      - http:          
          method: PATCH       
          path: /auction/{id}/bid
          authorizer: ${self:custom.authorizer}

  processAuctions: 
    handler: src/handlers/processAuctions.handler
    events:      
      - schedule: rate(1 minute)

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:tableName}

    AuctionsTable:  # New
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: endingAt
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: AuctionsTable
        GlobalSecondaryIndexes:
          - IndexName: statusAndEndDate
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: endingAt
                KeyType: RANGE
            Projection: 
              ProjectionType: ALL
                

custom:
  bundle:
    linting: false
  authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:serverless-auth0-authorizer-dev-auth
